{"version":3,"sources":["pages/HomePage.tsx","api/api.ts","components/CreateTodoForm.tsx","components/TodoList.tsx","pages/MyTodoList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["PageWrapper","styled","div","NavigationBlock","NavigationWrapper","HomePage","to","Api","apiURL","axiosInstance","GetTodos","get","CreateTodo","todo","post","this","axios","create","baseURL","timeout","headers","CreateTodoForm","setTodoCreated","api","formik","useFormik","initialValues","name","text_todo","onSubmit","values","then","handleSubmit","TextField","fullWidth","id","label","value","onChange","handleChange","disabled","isSubmitting","type","multiline","Button","color","variant","TodoList","todoItems","React","useState","items","setItems","style","maxWidth","margin","padding","oldIndex","newIndex","arrayMove","renderList","children","props","isDragged","cursor","undefined","renderItem","isSelected","listStyleType","border","boxShadow","borderRadius","fontFamily","backgroundColor","onClick","Header","h1","MyTodoList","loading","setLoading","setTodoItems","todoCreated","useEffect","r","data","CircularProgress","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e84c212.chunk.js","sourcesContent":["import React, {FC} from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styled from \"styled-components\";\r\n\r\nexport const PageWrapper = styled.div`\r\n padding: 100px;\r\n`\r\n\r\nconst NavigationBlock = styled.div`\r\n  border: 2px black solid;\r\n  height: 50vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst NavigationWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  a {\r\n    width: 45%;\r\n  }\r\n`\r\n\r\nconst HomePage: FC = () => {\r\n    return (\r\n        <NavigationWrapper>\r\n            <NavLink to={\"/todo\"}>\r\n                <NavigationBlock>\r\n                    My todo list\r\n                </NavigationBlock>\r\n            </NavLink>\r\n            <NavLink to={\"/authors\"}>\r\n                <NavigationBlock>\r\n                    Authors\r\n                </NavigationBlock>\r\n            </NavLink>\r\n        </NavigationWrapper>\r\n    );\r\n};\r\n\r\nexport default HomePage;","import {TodoItem} from \"./models/TodoItem\";\r\nimport axios, {AxiosInstance, AxiosResponse} from \"axios\";\r\n\r\n\r\nclass Api {\r\n    private apiURL: string;\r\n    private readonly axiosInstance: AxiosInstance\r\n    constructor(apiURL : string = \"http://localhost:8000/api\") {\r\n        this.apiURL = apiURL\r\n        this.axiosInstance = axios.create({\r\n            baseURL: apiURL,\r\n            timeout: 1000,\r\n            headers: {'X-Custom-Header': 'foobar'}\r\n        });\r\n    }\r\n\r\n    GetTodos = () : Promise<AxiosResponse<TodoItem[]>> => {\r\n        return this.axiosInstance.get<TodoItem[]>(('/todo'))\r\n    }\r\n\r\n    CreateTodo = (todo : TodoItem) : Promise<AxiosResponse<void>> => {\r\n        return this.axiosInstance.post('/todo/', todo)\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Api","import React, {FC, useState} from 'react';\r\nimport {useFormik} from \"formik\";\r\nimport {Button, TextField} from \"@material-ui/core\";\r\nimport {TodoItem} from \"../api/models/TodoItem\";\r\nimport Api from \"../api/api\";\r\n\r\n\r\ninterface Props {\r\n    setTodoCreated: React.Dispatch<React.SetStateAction<boolean>>\r\n}\r\n\r\nconst CreateTodoForm: FC<Props> = ({setTodoCreated}) => {\r\n    const initialValues: TodoItem = {\r\n        name: \"\",\r\n        text_todo: \"\"\r\n    }\r\n\r\n    const api = new Api()\r\n\r\n    const formik = useFormik({\r\n        initialValues,\r\n        onSubmit: (values) => {\r\n            setTodoCreated(false)\r\n            api.CreateTodo(values).then(() => {\r\n                setTodoCreated(true)\r\n            })\r\n        },\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <TextField\r\n                    fullWidth\r\n                    id={\"name\" as keyof TodoItem}\r\n                    name={\"name\" as keyof TodoItem}\r\n                    label=\"Todo name\"\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                    disabled={formik.isSubmitting}\r\n                />\r\n                <TextField\r\n                    fullWidth\r\n                    id={\"text_todo\" as keyof TodoItem}\r\n                    name={\"text_todo\" as keyof TodoItem}\r\n                    label=\"Todo description\"\r\n                    type=\"text\"\r\n                    value={formik.values.text_todo}\r\n                    onChange={formik.handleChange}\r\n                    multiline\r\n                    disabled={formik.isSubmitting}\r\n                />\r\n                <Button color=\"primary\" variant=\"contained\" fullWidth type=\"submit\">\r\n                    Create todo\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateTodoForm;","import React, {FC} from 'react';\r\nimport {arrayMove, List} from \"react-movable\";\r\nimport {TodoItem} from \"../api/models/TodoItem\";\r\n\r\n\r\ninterface IProps {\r\n    todoItems: TodoItem[]\r\n}\r\n\r\nconst TodoList : FC<IProps> = ({todoItems}) => {\r\n    const [items, setItems] = React.useState<TodoItem[]>(todoItems);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                maxWidth: '300px',\r\n                margin: '0px auto',\r\n                padding: '3em'\r\n            }}\r\n        >\r\n            <List\r\n                values={items}\r\n                onChange={({ oldIndex, newIndex }) =>\r\n                    setItems(arrayMove(items, oldIndex, newIndex))\r\n                }\r\n                renderList={({ children, props, isDragged }) => (\r\n                    <ul\r\n                        {...props}\r\n                        style={{ padding: 0, cursor: isDragged ? 'grabbing' : undefined }}\r\n                    >\r\n                        {children}\r\n                    </ul>\r\n                )}\r\n                renderItem={({ value, props, isDragged, isSelected }) => (\r\n                    <li\r\n                        {...props}\r\n                        style={{\r\n                            ...props.style,\r\n                            padding: '1.5em',\r\n                            margin: '0.5em 0em',\r\n                            listStyleType: 'none',\r\n                            cursor: isDragged ? 'grabbing' : 'grab',\r\n                            border: '2px solid #CCC',\r\n                            boxShadow: '3px 3px #AAA',\r\n                            color: '#333',\r\n                            borderRadius: '5px',\r\n                            fontFamily: 'Arial, \"Helvetica Neue\", Helvetica, sans-serif',\r\n                            backgroundColor: isDragged || isSelected ? '#EEE' : '#FFF'\r\n                        }}\r\n                        onClick={() => {\r\n\r\n                        }}\r\n                    >\r\n                        <h1>{value.name}</h1>\r\n                        <p>{value.text_todo}</p>\r\n                    </li>\r\n                )}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoList;","import React, {FC, useEffect, useState} from 'react';\r\nimport styled from \"styled-components\";\r\nimport CreateTodoForm from \"../components/CreateTodoForm\";\r\nimport {PageWrapper} from \"./HomePage\";\r\nimport TodoList from \"../components/TodoList\";\r\nimport Api from \"../api/api\";\r\nimport {TodoItem} from \"../api/models/TodoItem\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\n\r\nconst Header = styled.h1`\r\nfont-size: 25px;\r\nfont-weight: bold;\r\n`\r\n\r\n\r\nconst MyTodoList: FC = () => {\r\n    const [loading, setLoading] = useState(true)\r\n    const [todoItems, setTodoItems] = useState<TodoItem[]>([])\r\n    const [todoCreated, setTodoCreated] = useState(false)\r\n\r\n    const api = new Api(\"http://192.168.0.102:8000/\")\r\n\r\n    useEffect(() => {\r\n        api.GetTodos().then(r => {\r\n            setTodoItems(r.data)\r\n            setLoading(false)\r\n        })\r\n    },[])\r\n\r\n    useEffect(() => {\r\n        if (todoCreated) {\r\n            setLoading(true)\r\n            api.GetTodos().then(r => {\r\n                setTodoItems(r.data)\r\n                setLoading(false)\r\n            })\r\n        }\r\n    },[todoCreated])\r\n\r\n    return (\r\n        <PageWrapper>\r\n            <Header>My todo list</Header>\r\n            {loading ? <CircularProgress/> : <TodoList todoItems={todoItems}/>}\r\n            <CreateTodoForm setTodoCreated={setTodoCreated}/>\r\n        </PageWrapper>\r\n    );\r\n};\r\n\r\nexport default MyTodoList;","import React from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport HomePage from \"./pages/HomePage\";\nimport MyTodoList from \"./pages/MyTodoList\";\n\n\nfunction App() {\n    return (\n        <Router>\n            <Switch>\n                <Route path=\"/\" exact>\n                    <HomePage/>\n                </Route>\n                <Route path=\"/todo\">\n                    <MyTodoList/>\n                </Route>\n                <Route path=\"/authors\">\n\n                </Route>\n            </Switch>\n        </Router>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}